#!/bin/bash

usage() {
    cat <<EOM
  Usage:
    $(basename $0) boot-init [node_id]
      e.g. boot-init 0 -> setup master node

EOM
    exit 0
}

[[ $# < 1 ]] && { usage; }
node_id=$1
user="nandi"
hostname="node-rpi-$1"
master_ip=10.43.2.1

k3s_version="v1.28.2+k3s1"
k3s_mode="master"

K3S_ARGS="--node-name=node-rpi-$node_id"
INSTALL_K3S_EXEC=""
if [[ "$node_id" == "0" ]]; then
  # server mode
  INSTALL_K3S_EXEC="server $K3S_ARGS --node-label role=server --cluster-cidr 10.45.0.0/16 --service-cidr 10.50.0.0/16 --cluster-dns 10.50.0.100 --disable traefik --disable-network-policy --disable servicelb "
  # swtich kube-proxy to use ipvs and enable strict arp mode
  INSTALL_K3S_EXEC+=" --kube-proxy-arg proxy-mode=ipvs"
  INSTALL_K3S_EXEC+=" --kube-proxy-arg ipvs-strict-arp"
  
  # INSTALL_K3S_EXEC+=" --kube-apiserver-arg max-requests-inflight=600"
else
  token=$(ssh "nandi@${master_ip}" -- sudo cat /var/lib/rancher/k3s/server/token)
  [[ $? -ne 0 ]] && echo "cannot obtain server token. check ssh connection to ${master_ip}." && exit 1
  # client mode
  INSTALL_K3S_EXEC="agent $K3S_ARGS --node-label role=agent --server https://${master_ip}:6443 --token $token"
fi

[[ ! -f /Volumes/system-boot/user-data ]] && echo "Volume not mount. Make sure the SD-Card is inserted." && exit 1

echo "writing cloud-init at /Volumes/system-boot/user-data ..."
cat << EOF > /Volumes/system-boot/user-data
#cloud-config
# disable password auth
ssh_pwauth: false

# Set TimeZone and Locale
timezone: America/Toronto
locale: en_US.UTF-8

# Hostname
hostname: "$hostname"

# cloud-init not managing hosts file. only hostname is added
manage_etc_hosts: localhost

package_update: true
package_upgrade: true

packages:
  - linux-modules-extra-raspi

package_reboot_if_required: true

# provide custom CA cert
ca_certs:
  remove_defaults: false

  # add the trusted CAs
  trusted:
  - |
$(cat credentials/certs/intermediate/cert.pem | awk '{print "    "$0}' )
  - |
$(cat credentials/certs/root-ca/cert.pem | awk '{print "    "$0}' )

users:
  # not using default ubuntu user
  - name: "$user"
    primary_group: users
    groups: [adm, admin]
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    lock_passwd: true
    ssh_authorized_keys:
      - "$(cat ~/.ssh/id_rsa.pub)"

runcmd:
  # per https://github.com/k3s-io/k3s/issues/4234
  - curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="$k3s_version" INSTALL_K3S_EXEC="$INSTALL_K3S_EXEC" sh -

EOF

echo "done."
echo ""
echo "writing cmdline.txt at /Volumes/system-boot/cmdline.txt ..."

# https://docs.k3s.io/advanced#raspberry-pi
cat << EOF > /Volumes/system-boot/cmdline.txt
net.ifnames=0 dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=LABEL=writable rootfstype=ext4 elevator=deadline rootwait fixrtc cgroup_enable=memory cgroup_memory=1
EOF

echo "done."
echo ""



echo "writing network config at /Volumes/system-boot/network-config ..."

# make sure the network config enable DHCP and disable wifi to avoid network failure during bootup
cat << EOF > /Volumes/system-boot/network-config
network:
  version: 2

  ethernets:
    eth0:
      dhcp4: true
      optional: true
EOF

echo "done."
echo ""

# Modify RPi fan speed

if [[ ! $( cat /Volumes/system-boot/config.txt | grep "# PoE Hat Fan Speeds") ]]; then
  # https://github.com/raspberrypi/linux/issues/2715#issuecomment-769405042
  echo "+++ modifying PoE fan speed"
  cat << EOF >> /Volumes/system-boot/config.txt

# PoE Hat Fan Speeds
dtoverlay=rpi-poe-plus
dtparam=poe_fan_temp0=65000,poe_fan_temp0_hyst=2000
dtparam=poe_fan_temp1=75000,poe_fan_temp1_hyst=5000
dtparam=poe_fan_temp2=80000,poe_fan_temp2_hyst=3000
dtparam=poe_fan_temp3=85000,poe_fan_temp3_hyst=5000

EOF
  echo "done."
  echo ""
fi
